@mixin size($width, $height: $width) {
		width: $width;
		height: $height;
}

@mixin absoluteCenter($direction) {
		position: absolute;

		@if $direction == "x" {
				left: 50%;
				transform: translateX(-50%);
		} 

		@if $direction == "y" {
				top: 50%;
				transform: translateY(-50%);
		}
		
		@if $direction == "xy" {
				left: 50%;
				top: 50%;
				transform: translate(-50%, -50%);
		}
}

@mixin bg($color: red) {
		background-color: $color;
}

@mixin absoluteFull() {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
}

@mixin maxWidth($breakpoint) {
		@media screen and (max-width: $breakpoint) {
				@content;
		}
}

@mixin minWidth($breakpoint) {
		@media screen and (min-width: $breakpoint) {
				@content;
		}
}

@mixin flexbox($align-items: stretch, $justify-content: flex-start, $direction: row, $flex: flex, $wrap: nowrap) {
		align-items: $align-items;
		justify-content: $justify-content;
		flex-direction: $direction;
		display: $flex;
		flex-wrap: $wrap;
}

@mixin hideScroll() {
		-ms-overflow-style: none;
		scrollbar-width: none;
		&::-webkit-scrollbar {
				display: none;
		}
}

@mixin textClamp($rows: 1, $size: 100%) {
		display: -webkit-box;
		-webkit-line-clamp: $rows;
		-webkit-box-orient: vertical;
		overflow: hidden;
		text-overflow: ellipsis;
		width: $size;
		max-width: $size;
		white-space: pre-wrap;
		word-break: break-word;
}

@mixin hoverEffect($itemClass, $contentClass, $transform: "true") {
	#{$contentClass} {
		@include absoluteFull();
		opacity: 0;
		visibility: hidden;
		transition: all 0.25s linear;
		background: linear-gradient(to bottom, rgba($primary-color, 0.8), rgba($secondary-color, 0.8));
		z-index: 2;
		@include flexbox(center, center, column);
	}
	#{$itemClass} {
		position: relative;
		z-index: 1;
		transition: transform 0.25s linear;
		
		@if $transform == "true" {
			&::after {
				content: "";
				@include absoluteFull();
				@include bg($third-color);
				transition: transform 0.25s linear;
				z-index: -1;
			}
		}
		&:hover {
			#{$contentClass} {
				opacity: 1;
				visibility: visible;
			}
			@if $transform == "true" {
				transform: translate(-1rem, -1rem);
				&::after {
					transform: translate(1rem, 1rem);
				}
			}
		}
	}
}

@mixin touchSlider($width: 80%, $gap: 2.5rem, $padding: 1rem) {
	display: grid !important;
	justify-content: flex-start !important;
	grid-auto-columns: $width;
	grid-auto-flow: column;
	grid-template-columns: unset;
	column-gap: $gap;
	overflow-x: auto;
	@include hideScroll;
	padding: $padding;
	scroll-snap-type: x mandatory;
	scroll-snap-stop: always;
	& > * {
		scroll-snap-align: center;
		width: auto;
	}
}